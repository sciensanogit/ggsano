[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ggsano authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/a-create-graph.html","id":"how-to-create-sciensano-style-graphics","dir":"Articles","previous_headings":"","what":"How to create Sciensano style graphics","title":"Create Sciensano Graphs","text":"R User Group Sciensano, developed R package R cookbook make process creating publication-ready graphics -house style using R’s ggplot2 library reproducible process, well making easier people new R create graphics. cookbook hopefully help anyone wants make graphics like :","code":""},{"path":"/articles/a-create-graph.html","id":"load-all-the-libraries-you-need","dir":"Articles","previous_headings":"","what":"Load all the libraries you need","title":"Create Sciensano Graphs","text":"steps cookbook - create charts R general - require certain packages installed loaded.","code":"library(ggsano) ## style library(dplyr) ## data management #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(tidyr) ## data management library(ggplot2) ## plot"},{"path":"/articles/a-create-graph.html","id":"how-does-the-ggsano-package-work","dir":"Articles","previous_headings":"","what":"How does the ggsano package work?","title":"Create Sciensano Graphs","text":"package two functions, sciensano_style() finalise_plot(). sciensano_style(): arguments added ggplot ‘chain’ created plot. generally makes text size, font colour, axis lines, axis text, margins many standard chart components Sciensano style, formulated based recommendations feedback design team. Note colours lines case line chart bars bar chart, come box sciensano_style() function, need explicitly set standard ggplot chart functions. code shows sciensano_style() used within standard chart-production workflow. example simple line chart, using data Belgian burden disease study (BeBOD). First, need read data: Hereunder example graph:  can modify settings chart, add additional theme arguments, calling theme function arguments want - please note work must call called sciensano_style function. Otherwise sciensano_style() override . add gridlines, adding extra theme arguments included sciensano_style() function. many similar examples throughout cookbook.","code":"dta <- read_csv(\"https://burden.sciensano.be/shiny/daly/session/33266afb66727f845fe25968b354f344/download/downloadData?w=\") #Data for chart from gapminder package line_df <- dta %>%   filter(CAUSE == \"ALL CAUSES\" &            REGIOJ == \"Belgium\" &            MEASURE == \"Deaths\" &            METRIC == \"Rate\" &            AGEGRP == \"ALL\" &            SEX == \"Both sexes\")  #Get Sciensano color col <- pal_sciensano()(1)  #Make plot line <- ggplot(line_df, aes(x = YEAR, y = VAL_MEAN)) +   geom_line(colour = col, size = 1) +   geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +   sciensano_style() +   labs(title=\"Deaths\",        subtitle = \"Number of deaths in Belgium 2004-2018\") #> Warning in sciensano_style(): Please specify an available font #> The first available font will be taken: #> Using font: theme(panel.grid.major.x = element_line(color=\"#cbcbcb\"),          panel.grid.major.y=element_blank())"},{"path":"/articles/a-create-graph.html","id":"save-out-your-finished-chart","dir":"Articles","previous_headings":"","what":"Save out your finished chart","title":"Create Sciensano Graphs","text":"adding sciensano_style() chart one step get plot ready publication. finalise_plot(), second function ggsano package, left-align title, subtitle add footer source image bottom right corner plot. also save specified location. function five arguments: function arguments: finalise_plot(plot_name, source, save_filepath, width_pixels = 640, height_pixels = 450) plot_name: variable name called plot, example chart example plot_name \"line\". source: source text want appear bottom left corner plot. need type word \"Source:\" , example source = \"Source: ONS\" right way . save_filepath: precise filepath want graphic save , including .png extension end. depend working directory specific R project. example filepath : Desktop/R_projects/charts/line_chart.png. width_pixels: set 640px default, call argument want chart different width, specify want . height_pixels: set 450px default, call argument want chart different height, specify want . logo_image_path: argument specifies path image/logo bottom right corner plot. default placeholder PNG file background matches background colour plot, specify argument want appear without logo. want add logo, just specify path PNG file. package prepared wide thin image mind. Example finalise_plot() used standard workflow. function called created finalised chart data, titles added sciensano_style() :","code":"finalise_plot(plot_name = my_line_plot,               source = \"Source: Gapminder\",               save_filepath = \"filename_that_my_plot_should_be_saved_to.png\",               width_pixels = 640,               height_pixels = 450,               logo_image_path = \"path_to_logo.png\")"},{"path":"/articles/b-add-fond.html","id":"how-to-add-a-custom-font-to-a-chart","dir":"Articles","previous_headings":"","what":"How to add a custom font to a chart","title":"Add custom fonts to parse to the plot","text":"Adding custom fond graph possible via extrafont package. information package can found . package can installed loaded running following code:","code":"install.packages(\"extrafont\") library(extrafont)"},{"path":"/articles/b-add-fond.html","id":"installing-and-importing-fonts","dir":"Articles","previous_headings":"","what":"Installing and importing fonts","title":"Add custom fonts to parse to the plot","text":"package installed, can check available fonts system running fonts(). specific font available system, can install , run font_import(). font_import() scan system installed fonts registered R, register . installed imported new fonts, available R. Fonts specified sciensano_style(font = \"XXXX\") function.","code":""},{"path":"/articles/c-line-charts.html","id":"create-a-single-line-chart","dir":"Articles","previous_headings":"","what":"Create a single line chart","title":"Creating a line chart","text":"","code":"#Data for chart from gapminder package line_df <- dta %>%   filter(CAUSE == \"ALL CAUSES\" &            REGIOJ == \"Belgium\" &            MEASURE == \"Deaths\" &            METRIC == \"Rate\" &            AGEGRP == \"ALL\" &            SEX == \"Both sexes\")  #Get Sciensano color col <- pal_sciensano()(1)  #Make plot line <- ggplot(line_df, aes(x = YEAR, y = VAL_MEAN)) +   geom_line(colour = col, size = 1) +   geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +   sciensano_style() +   labs(title=\"Deaths\",        subtitle = \"Number of deaths in Belgium 2004-2018\") #> Warning in sciensano_style(): Please specify an available font #> The first available font will be taken: #> Using font:"},{"path":"/articles/c-line-charts.html","id":"create-a-multiple-line-chart","dir":"Articles","previous_headings":"","what":"Create a multiple line chart","title":"Creating a line chart","text":"","code":"#Data for chart from gapminder package line_df <- dta %>%   filter(CAUSE == \"ALL CAUSES\" &            REGIOJ %in% c(\"Flanders\", \"Brussels\", \"Wallonia\") &            MEASURE == \"Deaths\" &            METRIC == \"Rate\" &            AGEGRP == \"ALL\" &            SEX == \"Both sexes\")  #Make plot line <- ggplot(line_df, aes(x = YEAR, y = VAL_MEAN, color = REGIOJ)) +   geom_line(size = 1) +   geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +   sciensano_style() +   scale_color_sciensano() +   labs(title=\"Deaths\",        subtitle = \"Number of deaths in Brussels, Flanders, and Wallonia\") #> Warning in sciensano_style(): Please specify an available font #> The first available font will be taken: #> Using font:"},{"path":"/articles/d-bar-charts.html","id":"create-a-simple-bar-chart","dir":"Articles","previous_headings":"","what":"Create a simple bar chart","title":"Create bar charts","text":"","code":"#Prepare data bar_df <- dta %>%   filter(CAUSE == \"ALL CAUSES\" &            REGIOJ == \"Belgium\" &            MEASURE == \"Deaths\" &            METRIC == \"Rate\" &            AGEGRP %in% c(\"ALL\") &            SEX == \"Both sexes\")  #Get Sciensano color col <- pal_sciensano()(1)  #Make plot bars <- ggplot(bar_df, aes(x = YEAR, y = VAL_MEAN)) +   geom_bar(stat=\"identity\",             position=\"identity\",             fill=col) +   geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +   sciensano_style() +   labs(title=\"Deaths\",        subtitle = \"Death in Belgium\") #> Warning in sciensano_style(): Please specify an available font #> The first available font will be taken: #> Using font:"},{"path":"/articles/d-bar-charts.html","id":"make-a-stacked-bar-chart","dir":"Articles","previous_headings":"","what":"Make a stacked bar chart","title":"Create bar charts","text":"","code":"#prepare data stacked_df <- dta %>%   filter(CAUSE == \"ALL CAUSES\" &            REGIOJ != \"Belgium\" &            MEASURE == \"Deaths\" &            METRIC == \"Number\" &            YEAR == 2018 &            !(AGEGRP %in% c(\"ALL\", \"BSP\", \"ESP\")) &            SEX == \"Both sexes\")  #Calculate percentages stacked_df <- stacked_df %>%   group_by(REGIOJ) %>%   mutate(PERC = VAL_MEAN/sum(VAL_MEAN))  #create plot stacked_bars <- ggplot(data = stacked_df,                         aes(x = REGIOJ,                            y = PERC,                            fill = AGEGRP)) +   geom_bar(stat = \"identity\",             position = \"fill\") +   sciensano_style() +   scale_y_continuous(labels = scales::percent) +   scale_fill_sciensano() +   geom_hline(yintercept = 0, size = 1, colour = \"#333333\") +   labs(title = \"Deaths across regions\",        subtitle = \"% of deaths by age category, 2018\") +   theme(legend.position = \"top\",          legend.justification = \"left\") #> Warning in sciensano_style(): Please specify an available font #> The first available font will be taken: #> Using font:"},{"path":"/articles/d-bar-charts.html","id":"make-a-grouped-bar-chart","dir":"Articles","previous_headings":"","what":"Make a grouped bar chart","title":"Create bar charts","text":"Making grouped bar chart similar making bar chart. just need change position = \"identity\" position = \"dodge\", set fill aesthetically instead:","code":"#Prepare data grouped_bar_df <- dta %>%   filter(CAUSE == \"ALL CAUSES\" &            REGIOJ != \"Belgium\" &            MEASURE == \"Deaths\" &            METRIC == \"Rate\" &            YEAR %in% c(2004, 2018) &            AGEGRP %in% c(\"ALL\") &            SEX != \"Both sexes\")    #Make plot grouped_bars <- ggplot(grouped_bar_df,                         aes(x = REGIOJ,                             y = VAL_MEAN,                             fill = SEX)) +   geom_bar(stat=\"identity\", position=\"dodge\") +   geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +   sciensano_style() +   scale_fill_sciensano() +   labs(title=\"We're living longer\",        subtitle = \"Biggest life expectancy rise, 1967-2007\") #> Warning in sciensano_style(): Please specify an available font #> The first available font will be taken: #> Using font:"},{"path":"/articles/e-other-charts.html","id":"create-a-dumbell-chart","dir":"Articles","previous_headings":"","what":"Create a Dumbell chart","title":"Create other type of charts","text":"","code":"#Prepare data dumbbell_df <- dta %>%   filter(LEVEL == 3 &            REGIOJ == \"Belgium\" &            MEASURE == \"Deaths\" &            METRIC == \"Rate\" &            AGEGRP %in% c(\"ALL\") &            SEX == \"Both sexes\" &            YEAR %in% c(2004, 2018)) %>%   pivot_wider(id_cols = CAUSE, names_from = YEAR, values_from = VAL_MEAN) %>%   mutate(gap = `2018` - `2004`) %>%   arrange(desc(gap)) %>%   head(10)  #Make plot ggplot(dumbbell_df, aes(x = `2004`, xend = `2018`, y = reorder(CAUSE, gap), group = CAUSE)) +    geom_dumbbell(colour = \"#dddddd\",                 size = 3,                 colour_x = pal_sciensano(\"GnRd\")(6)[1],                 colour_xend = pal_sciensano(\"GnRd\")(6)[6]) +   sciensano_style() +    labs(title=\"Rise in deaths\",        subtitle=\"Biggest rise in deaths, 2004-2018\") #> Warning in sciensano_style(): Please specify an available font #> The first available font will be taken: #> Using font:"},{"path":"/articles/f-customize-legend.html","id":"remove-the-legend","dir":"Articles","previous_headings":"","what":"Remove the legend","title":"Cutsomize the legend","text":"Remove legend become one - ’s better label data directly text annotations. Use guides(colour=FALSE) remove legend specific aesthetic (replace colour relevant aesthetic). can also remove legends one go using theme(legend.position = \"none\"):","code":"multiple_line + guides(colour=FALSE) line + theme(legend.position = \"none\")"},{"path":"/articles/f-customize-legend.html","id":"change-the-position-of-the-legend","dir":"Articles","previous_headings":"","what":"Change the position of the legend","title":"Cutsomize the legend","text":"legend’s default position top plot. Move left, right bottom outside plot :","code":"line + theme(legend.position = \"right\")"},{"path":"/articles/f-customize-legend.html","id":"remove-the-legend-title","dir":"Articles","previous_headings":"","what":"Remove the legend title","title":"Cutsomize the legend","text":"Remove legend title tweaking theme(). Don’t forget changes theme work, must added ’ve called sciensano_style()!","code":"+ theme(legend.title = element_blank())"},{"path":"/articles/f-customize-legend.html","id":"rearrange-the-layout-of-your-legend","dir":"Articles","previous_headings":"","what":"Rearrange the layout of your legend","title":"Cutsomize the legend","text":"’ve got many values legend, may need rearrange layout aesthetic reasons. can specify number rows want legend argument guides. code snippet, instance, create legend 4 rows: may need change fill code whatever aesthetic legend describing, e.g. size, colour, etc.","code":"+ guides(fill = guide_legend(nrow = 4, byrow = T))"},{"path":"/articles/f-customize-legend.html","id":"change-the-appearance-of-your-legend-symbols","dir":"Articles","previous_headings":"","what":"Change the appearance of your legend symbols","title":"Cutsomize the legend","text":"can override default appearance legend symbols, without changing way appear plot, adding argument override.aes guides. make size legend symbols larger, instance:","code":"+ guides(fill = guide_legend(override.aes = list(size = 4))))"},{"path":"/articles/f-customize-legend.html","id":"add-space-between-your-legend-labels","dir":"Articles","previous_headings":"","what":"Add space between your legend labels","title":"Cutsomize the legend","text":"default ggplot legend almost space individual legend items. ideal. can add space changing scale labels manually. instance, set colour geoms dependent data, get legend colour, can tweak exact labels get extra space using snippet: legend showing something different, need change code accordingly. instance, fill, need scale_fill_manual() instead.","code":"+ scale_colour_manual(labels = function(x) paste0(\" \", x, \"  \"))"},{"path":"/articles/f-customize-legend.html","id":"make-a-continuous-legend-wider","dir":"Articles","previous_headings":"","what":"Make a continuous legend wider","title":"Cutsomize the legend","text":"legend based continuous color scale, sometimes may wish increase size. can accomplished changing legend.key.width theme().","code":"#Data for chart from gapminder package cont_df <- dta %>%   filter(LEVEL == 3 &            REGIOJ %in% c(\"Belgium\") &            MEASURE == \"Deaths\" &            METRIC == \"Rate\" &            AGEGRP == \"ALL\" &            SEX == \"Both sexes\" &            YEAR %in% 2014:2018) %>%   group_by(YEAR) %>%   slice_head(n = 20)  #Make plot tile <- ggplot(cont_df, aes(x = YEAR, y = CAUSE)) +   geom_tile(aes(fill = VAL_MEAN)) +   sciensano_style() +   scale_fill_sciensano_c(palette = \"red-yellow-green\", reverse = TRUE) +   labs(title=\"Deaths\",        subtitle = \"Number of deaths\") +   theme(legend.key.width = ggplot2::unit(2.5, \"cm\")) #> Warning in sciensano_style(): Please specify an available font #> The first available font will be taken: #> Using font:"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robby De Pauw. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"De Pauw R (2022). ggsano: Create elegant figures documents accoring Sciensano standards. R package version 0.0.0.9000, https://sciensanogit.github.io/ggsano.","code":"@Manual{,   title = {ggsano: Create elegant figures and documents accoring to Sciensano standards},   author = {Robby {De Pauw}},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://sciensanogit.github.io/ggsano}, }"},{"path":"/index.html","id":"ggsano","dir":"","previous_headings":"","what":"Create elegant figures and documents accoring to Sciensano standards","title":"Create elegant figures and documents accoring to Sciensano standards","text":"goal ggsano make Sciensano color housestyle available R. creation package based bbplot package, package intetions createb BBC. kudos BBC team.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create elegant figures and documents accoring to Sciensano standards","text":"can install latest version ggsano GitHub running following code: package can loaded R :","code":"# install.packages(\"devtools\") devtools::install_github(\"sciensanogit/ggsano\") library(ggsano)"},{"path":[]},{"path":"/index.html","id":"colors","dir":"","previous_headings":"Using the functions","what":"Colors","title":"Create elegant figures and documents accoring to Sciensano standards","text":"package two palettes-functions available: pal_sciensano() discrete colors, pal_sciensano_c() continuous colors.","code":""},{"path":"/index.html","id":"available-palettes","dir":"","previous_headings":"Using the functions > Colors","what":"Available palettes","title":"Create elegant figures and documents accoring to Sciensano standards","text":"color palette pal_sciensano, four options available: default, contrast, GnRd, PuBl. colors HEX-codes follows: DEFAULT  CONTRAST  GnRd  PuBl","code":"scales::show_col(pal_sciensano(palette = \"default\")(14), labels = TRUE) scales::show_col(pal_sciensano(palette = \"contrast\")(12),  labels = TRUE) scales::show_col(pal_sciensano(palette = \"GnRd\")(6),  labels = TRUE) scales::show_col(pal_sciensano(palette = \"PuBl\")(6),  labels = TRUE)"},{"path":"/index.html","id":"examples","dir":"","previous_headings":"Using the functions > Colors","what":"Examples","title":"Create elegant figures and documents accoring to Sciensano standards","text":"Using palette discrete scale:   Using palette continuous scale:","code":"library(\"ggplot2\") library(\"reshape2\") library(\"cowplot\")  data(\"mtcars\") data(\"diamonds\")  ggplot(   subset(diamonds, carat >= 2.2),   aes(x = table, y = price, colour = cut) ) +   geom_point(alpha = 0.7) +   geom_smooth(method = \"loess\", alpha = 0.1, size = 1, span = 1) +   theme_bw() + scale_color_sciensano(palette = \"GnRd\", reverse = TRUE) #> `geom_smooth()` using formula 'y ~ x' ggplot(   subset(diamonds, carat > 2.2 & depth > 55 & depth < 70),   aes(x = depth, fill = cut) ) +   geom_histogram(colour = \"black\", binwidth = 1, position = \"dodge\") +   theme_bw() + scale_fill_sciensano(palette = \"GnRd\", reverse = TRUE) cor <- abs(cor(mtcars)) cor_melt <- melt(cor)  p1 <- ggplot(   cor_melt,   aes(x = Var1, y = Var2, fill = value) ) +   geom_tile(colour = \"black\", size = 0.3) +   theme_bw() + scale_fill_sciensano_c(palette = \"red-yellow-green\")  p2 <- ggplot(   cor_melt,   aes(x = Var1, y = Var2, fill = value) ) +   geom_tile(colour = \"black\", size = 0.3) +   theme_bw() + scale_fill_sciensano_c(palette = \"green\")  p3 <- ggplot(   cor_melt,   aes(x = Var1, y = Var2, fill = value) ) +   geom_tile(colour = \"black\", size = 0.3) +   theme_bw() + scale_fill_sciensano_c(palette = \"red\")  cowplot::plot_grid(p1, p2, p3)"},{"path":"/index.html","id":"sciensano-style","dir":"","previous_headings":"Using the functions","what":"Sciensano style","title":"Create elegant figures and documents accoring to Sciensano standards","text":"sciensano_style(): arguments added ggplot chain created plot. change text-size, font, lay-graph dedicated Sciensano theme.","code":"p1 +   sciensano_style() + ## Default font is Arial.   theme(legend.key.width = ggplot2::unit(2.5, \"cm\")) ## extend the legend ggplot(   subset(diamonds, carat > 2.2 & depth > 55 & depth < 70),   aes(x = depth, fill = cut)) +   geom_histogram(colour = \"black\", binwidth = 1, position = \"dodge\") +   theme_bw() + scale_fill_sciensano(palette = \"GnRd\", reverse = TRUE) +   sciensano_style()"},{"path":"/index.html","id":"finalizing-plots","dir":"","previous_headings":"Using the functions","what":"Finalizing plots","title":"Create elegant figures and documents accoring to Sciensano standards","text":"finalise_plot: save plot correct guidelines publication Sciensano graphic. made functions left align title, subtitle source, add Sciensano blocks bottom right save specified location. function six arguments, three need explicitly set three defaults unless overwrite . function arguments: finalise_plot(plot_name, source_name, save_filepath, width_pixels, height_pixels, logo_image_path) plot_name: variable name called plot. source_name: source text want appear bottom left corner plot. need type word \"Source:\" , just source, example source = \"Source: ONS\" right way . save_filepath: precise filepath want graphic save , including .png extension end. depend working directory specific R project. example relative filepath : /charts/line_chart.png. width_pixels: set 640px default, call argument specify width want chart . height_pixels: set 450px default, call argument specify height want chart . logo_image_path: argument specifies path image/logo bottom right corner plot. default placeholder PNG file background matches background colour plot, specify argument want appear without logo. want add logo, just specify path PNG file. package prepared wide thin image mind.","code":"final_plot <- finalise_plot(   plot_name = p1 +      sciensano_style() +     ggtitle(\"Example plot of mtcars\", subtitle = \"correlations\") +     theme(legend.key.width = ggplot2::unit(2.5, \"cm\")),   source = \"Source: mtcars\",   logo_image_path = \"inst/extdata/logo.png\",   width_pixels = 640,   height_pixels = 550 )  final_plot"},{"path":"/reference/finalise_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange alignment and save Sciensano ggplot chart — finalise_plot","title":"Arrange alignment and save Sciensano ggplot chart — finalise_plot","text":"Running function save plot correct guidelines publication Sciensano graphic. left align title, subtitle source, add Sciensano blocks bottom right save specified location.","code":""},{"path":"/reference/finalise_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange alignment and save Sciensano ggplot chart — finalise_plot","text":"","code":"finalise_plot(   plot_name,   source_name,   save_filepath = FALSE,   width_pixels = 640,   height_pixels = 450,   logo_image_path = file.path(system.file(\"extdata\", package = \"ggsano\"), \"logo.png\") )"},{"path":"/reference/finalise_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange alignment and save Sciensano ggplot chart — finalise_plot","text":"plot_name variable name plot created want format save source_name text want come text 'Source:' bottom left hand side side save_filepath Exact filepath want plot saved (DEFAULT: set FALSE want save plot) width_pixels Width pixels want save chart - defaults 640 height_pixels Height pixels want save chart - defaults 450 logo_image_path File path logo image want use right hand side chart, needs PNG file - defaults Sciensano blocks image sits within data folder package","code":""},{"path":"/reference/finalise_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange alignment and save Sciensano ggplot chart — finalise_plot","text":"(Invisibly) updated ggplot object.","code":""},{"path":"/reference/finalise_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange alignment and save Sciensano ggplot chart — finalise_plot","text":"","code":"if (FALSE) finalise_plot(plot_name = myplot, source = \"The source for my data\", save_filepath = \"filename_that_my_plot_should_be_saved_to-nc.png\", width_pixels = 640, height_pixels = 450, logo_image_path = \"logo_image_filepath.png\" )"},{"path":"/reference/ggsano.html","id":null,"dir":"Reference","previous_headings":"","what":"ggsano: A package that implements the Sciensano house style in R — ggsano","title":"ggsano: A package that implements the Sciensano house style in R — ggsano","text":"ggsano package currently provides three categories important functions: sciensano_style, sciensano_colours sciensano_templates.","code":""},{"path":"/reference/ggsano.html","id":"sciensano-style-functions","dir":"Reference","previous_headings":"","what":"sciensano_style functions","title":"ggsano: A package that implements the Sciensano house style in R — ggsano","text":"sciensano_style functions can handle ggplot2-object recompile according Sciensano house style.","code":""},{"path":"/reference/ggsano.html","id":"sciensano-colours-functions","dir":"Reference","previous_headings":"","what":"sciensano_colours functions","title":"ggsano: A package that implements the Sciensano house style in R — ggsano","text":"sciensano_colours functions return Sciensano house style colours HEX format ('#XXXXXX'). discrete continuous scales available.","code":""},{"path":"/reference/ggsano.html","id":"sciensano-templates","dir":"Reference","previous_headings":"","what":"sciensano_templates","title":"ggsano: A package that implements the Sciensano house style in R — ggsano","text":"TBD.","code":""},{"path":"/reference/pal_sciensano.html","id":null,"dir":"Reference","previous_headings":"","what":"Sciensano Discrete Color Palettes — pal_sciensano","title":"Sciensano Discrete Color Palettes — pal_sciensano","text":"Color palettes inspired housestyle Sciensano https://intranet.sciensano./nl/DienstenAlgemeenDirecteur/Communicatie/Pages/Huisstijl-en-templates.aspx.","code":""},{"path":"/reference/pal_sciensano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sciensano Discrete Color Palettes — pal_sciensano","text":"","code":"pal_sciensano(   palette = c(\"default\", \"contrast\", \"GnRd\", \"PuBl\", \"region\"),   alpha = 1,   reverse = FALSE )"},{"path":"/reference/pal_sciensano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sciensano Discrete Color Palettes — pal_sciensano","text":"palette Palette type. Currently four available general options: \"default\", \"contrast\", \"GnRd\", \"PuBl\" containing subset palette (default package 14-color palette inspired Sciensano). alpha Transparency level, real number (0, 1]. See alpha rgb details. reverse Logical. order colors reversed?","code":""},{"path":"/reference/pal_sciensano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sciensano Discrete Color Palettes — pal_sciensano","text":"","code":"if (FALSE) library(\"scales\") show_col(pal_sciensano(\"default\")(14)) #> Error in show_col(pal_sciensano(\"default\")(14)): could not find function \"show_col\" show_col(pal_sciensano(\"default\", alpha = 0.6)(14)) #> Error in show_col(pal_sciensano(\"default\", alpha = 0.6)(14)): could not find function \"show_col\""},{"path":"/reference/pal_sciensano_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Sciensano Continuous Color Palettes — pal_sciensano_c","title":"Sciensano Continuous Color Palettes — pal_sciensano_c","text":"Sciensano Continuous Color Palettes","code":""},{"path":"/reference/pal_sciensano_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sciensano Continuous Color Palettes — pal_sciensano_c","text":"","code":"pal_sciensano_c(   palette = c(\"red\", \"green\", \"red-yellow-green\"),   n = 10,   alpha = 1,   reverse = FALSE )"},{"path":"/reference/pal_sciensano_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sciensano Continuous Color Palettes — pal_sciensano_c","text":"palette Palette type. 3 available options: \"red\" \"green\" \"red-yellow-green\" n Number individual colors generated. alpha Transparency level, real number (0, 1]. See alpha rgb details. reverse Logical. order colors reversed?","code":""},{"path":"/reference/pal_sciensano_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sciensano Continuous Color Palettes — pal_sciensano_c","text":"","code":"if (FALSE) library(\"scales\") show_col(pal_sciensano(\"red-yellow-green\")(10)) #> Error in show_col(pal_sciensano(\"red-yellow-green\")(10)): could not find function \"show_col\" show_col(pal_sciensano(\"red-yellow-green\", n = 30, alpha = 0.6, reverse = TRUE)(30)) #> Error in show_col(pal_sciensano(\"red-yellow-green\", n = 30, alpha = 0.6,     reverse = TRUE)(30)): could not find function \"show_col\""},{"path":"/reference/rgb_sciensano_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Sciensano Continuous Color Palettes — rgb_sciensano_c","title":"Sciensano Continuous Color Palettes — rgb_sciensano_c","text":"Sciensano Continuous Color Palettes","code":""},{"path":"/reference/rgb_sciensano_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sciensano Continuous Color Palettes — rgb_sciensano_c","text":"","code":"rgb_sciensano_c(   palette = c(\"red\", \"green\", \"red-yellow-green\"),   n = 10,   alpha = 1,   reverse = FALSE )"},{"path":"/reference/rgb_sciensano_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sciensano Continuous Color Palettes — rgb_sciensano_c","text":"palette Palette type. 3 available options: \"red\" \"green\" \"red-yellow-green\" n Number individual colors generated. alpha Transparency level, real number (0, 1]. See alpha rgb details. reverse Logical. order colors reversed?","code":""},{"path":"/reference/rgb_sciensano_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sciensano Continuous Color Palettes — rgb_sciensano_c","text":"","code":"if (FALSE) library(\"scales\") show_col(rgb_sciensano_c(\"red\")(10)) #> Error in show_col(rgb_sciensano_c(\"red\")(10)): could not find function \"show_col\" show_col(rgb_sciensano_c(\"red\", n = 30, alpha = 0.6, reverse = TRUE)(30)) #> Error in show_col(rgb_sciensano_c(\"red\", n = 30, alpha = 0.6, reverse = TRUE)(30)): could not find function \"show_col\""},{"path":"/reference/scale_sciensano.html","id":null,"dir":"Reference","previous_headings":"","what":"Sciensano Discrete Color/Colour Scales — scale_color_sciensano","title":"Sciensano Discrete Color/Colour Scales — scale_color_sciensano","text":"See pal_sciensano details.","code":""},{"path":"/reference/scale_sciensano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sciensano Discrete Color/Colour Scales — scale_color_sciensano","text":"","code":"scale_color_sciensano(   palette = c(\"default\", \"contrast\", \"GnRd\", \"PuBl\", \"region\"),   alpha = 1,   reverse = FALSE,   ... )  scale_colour_sciensano(   palette = c(\"default\", \"contrast\", \"GnRd\", \"PuBl\", \"region\"),   alpha = 1,   reverse = FALSE,   ... )  scale_fill_sciensano(   palette = c(\"default\", \"contrast\", \"GnRd\", \"PuBl\", \"region\"),   alpha = 1,   reverse = FALSE,   ... )"},{"path":"/reference/scale_sciensano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sciensano Discrete Color/Colour Scales — scale_color_sciensano","text":"palette Palette type. Currently four available general options: \"default\", \"contrast\", \"GnRd\", \"PuBl\" containing subset palette (default package 14-color palette inspired Sciensano). alpha Transparency level, real number (0, 1]. See alpha rgb details. reverse Logical. order colors reversed? ... additional parameters discrete_scale","code":""},{"path":"/reference/scale_sciensano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sciensano Discrete Color/Colour Scales — scale_color_sciensano","text":"","code":"if (FALSE) library(\"ggplot2\") data(\"diamonds\") #> Warning: data set ‘diamonds’ not found  ggplot(   subset(diamonds, carat >= 2.2),   aes(x = table, y = price, colour = cut) ) +   geom_point(alpha = 0.7) +   geom_smooth(method = \"loess\", alpha = 0.1, size = 1, span = 1) +   theme_bw() + scale_color_sciensano() #> Error in ggplot(subset(diamonds, carat >= 2.2), aes(x = table, y = price,     colour = cut)): could not find function \"ggplot\"  ggplot(   subset(diamonds, carat > 2.2 & depth > 55 & depth < 70),   aes(x = depth, fill = cut) ) +   geom_histogram(colour = \"black\", binwidth = 1, position = \"dodge\") +   theme_bw() + scale_fill_sciensano() #> Error in ggplot(subset(diamonds, carat > 2.2 & depth > 55 & depth < 70),     aes(x = depth, fill = cut)): could not find function \"ggplot\""},{"path":"/reference/scale_sciensano_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Sciensano Continuous Color Scales — scale_color_sciensano_c","title":"Sciensano Continuous Color Scales — scale_color_sciensano_c","text":"See pal_sciensano_c details.","code":""},{"path":"/reference/scale_sciensano_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sciensano Continuous Color Scales — scale_color_sciensano_c","text":"","code":"scale_color_sciensano_c(   palette = c(\"red\", \"green\", \"red-yellow-green\"),   alpha = 1,   reverse = FALSE,   ... )  scale_colour_sciensano_c(   palette = c(\"red\", \"green\", \"red-yellow-green\"),   alpha = 1,   reverse = FALSE,   ... )  scale_fill_sciensano_c(   palette = c(\"red\", \"green\", \"red-yellow-green\"),   alpha = 1,   reverse = FALSE,   ... )"},{"path":"/reference/scale_sciensano_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sciensano Continuous Color Scales — scale_color_sciensano_c","text":"palette Palette type. 3 available options: \"red\" \"green\" \"red-yellow-green\" alpha Transparency level, real number (0, 1]. See alpha rgb details. reverse Logical. order colors reversed? ... additional parameters discrete_scale","code":""},{"path":"/reference/scale_sciensano_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sciensano Continuous Color Scales — scale_color_sciensano_c","text":"","code":"if (FALSE) library(\"ggplot2\") library(\"reshape2\") #> Error in library(\"reshape2\"): there is no package called ‘reshape2’ data(\"mtcars\")  cor <- abs(cor(mtcars)) cor_melt <- melt(cor) #> Error in melt(cor): could not find function \"melt\"  ggplot(   cor_melt,   aes(x = Var1, y = Var2, fill = value) ) +   geom_tile(colour = \"black\", size = 0.3) +   theme_bw() + scale_fill_sciensano_c(\"red-yellow-green\") #> Error in ggplot(cor_melt, aes(x = Var1, y = Var2, fill = value)): could not find function \"ggplot\""},{"path":"/reference/sciensano_style.html","id":null,"dir":"Reference","previous_headings":"","what":"Add sciensano theme to ggplot chart — sciensano_style","title":"Add sciensano theme to ggplot chart — sciensano_style","text":"function allows add sciencsano theme ggplotgraphics.","code":""},{"path":"/reference/sciensano_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add sciensano theme to ggplot chart — sciensano_style","text":"","code":"sciensano_style(font = \"Arial\")"},{"path":"/reference/sciensano_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add sciensano theme to ggplot chart — sciensano_style","text":"font Specify one available fonts (Default: Arial)","code":""},{"path":"/reference/sciensano_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add sciensano theme to ggplot chart — sciensano_style","text":"","code":"if (FALSE) line <- ggplot(line_df, aes(x = year, y = lifeExp)) + geom_line(colour = \"#007f7f\", size = 1) + geom_hline(yintercept = 75, size = 1, colour=\"#3AAA35\") + sciensano_style()"}]
